{"version":3,"sources":["../../action-bot-landing-page/index.js"],"names":["onDocumentReady","callback","document","readyState","addEventListener","origin","window","location","API_CONFIG","cdnUrl","includes","papiUrl","PREFIX","VALUES_LIFE_TIME","supportedAppTypes","appTypesWithDataMapping","envIdToEnvPath","params","URLSearchParams","search","paramsAreValid","searchParams","requiredParamKeys","every","key","has","hasOwnProperty","get","getDialog","botId","conversationId","dialogId","envId","jwt","url","featchDataFromServer","getNode","nodeId","bbCodes","Promise","resolve","wmjQuery","ajax","type","beforeSend","xhr","setRequestHeader","success","fetchData","normalizeAnswers","rawAnswers","nodeData","settings","app","answers","Object","entries","reduce","acc","descriptor","value","innerAcc","innerKey","innerValue","Number","dataMapping","runDeployable","classWalkMeAPI","_walkmeInternals","ctx","shoutOutsManager","shuttlesManager","siteConfigManager","appTypeToWmActionHandler","START_WALKTHRU","id","startFlowById","START_SMARTWALKTHRU","SMARTWALKTHRU","WALKTHRU","startWalkthruById","SURVEY","startSurveyById","SHOUTOUT","activateById","RESOURCE","startContentById","SHUTTLE","data","jsonSettings","Custom","actionBotCustomSettings","actionbot","rawNode","webSystemGuid","destinationUrl","permalink","saveAnswersToStorage","refreshGetData","customDestinationUrl","href","accountsToSync","undefined","syncSwtDataToOtherAccounts","length","syncSwtDataMatchingRecords","filter","item","Array","isArray","map","indexOf","accountsGuids","accountGuids","concat","e","console","error","forEach","account","warn","clientStorageManager","ttl","swtDataTTL","node","find","saveData","forceLoad","payloadOptions","commonEvents","nodeSettings","wmActionHandler","payload","options","raiseEvent","open","loadUserSnippet","onReadyCallback","walkme_ready","userGuid","envPath","snippetSrc","walkmeScript","createElement","src","body","append","forceProxyStorage","exDate","Date","setTime","getTime","expireString","toUTCString","cookie"],"mappings":"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","sourcesContent":["// @flow\n/* istanbul ignore file */\nfunction onDocumentReady(callback) {\n  if (document.readyState === 'complete' || document.readyState === 'interactive') {\n    callback();\n  } else {\n    document.addEventListener('DOMContentLoaded', callback);\n  }\n}\n\nonDocumentReady(() => {\n  const { origin } = window.location;\n  const API_CONFIG = {\n    cdnUrl: origin.includes('localhost') ? 'https://cdn.walkmeqa.com' : origin,\n    papiUrl: `https://${origin.includes('eu') ? 'eu-papi': 'papi'}.walkme${\n      origin.includes('localhost') || origin.includes('walkmeqa') ? 'qa' : ''\n    }.com`,\n  };\n  const PREFIX = 'wm-ab-';\n  const VALUES_LIFE_TIME = 60 * 10;\n\n  const supportedAppTypes = [\n    'START_WALKTHRU',\n    'START_SMARTWALKTHRU',\n    'SMARTWALKTHRU',\n    'WALKTHRU',\n    'SURVEY',\n    'SHOUTOUT',\n    'RESOURCE',\n    'SHUTTLE',\n    'WEB_INTEGRATION',\n    'STORE_DATA',\n  ];\n  const appTypesWithDataMapping = supportedAppTypes; // According to EUI they all have dataMapping\n  const envIdToEnvPath = { 0: '', 3: '/test', 95: '/success', 32: '/success' };\n  const params = new URLSearchParams(window.location.search);\n\n  const paramsAreValid = (searchParams) => {\n    const requiredParamKeys = [\n      'userGuid',\n      'jwt',\n      'envId',\n      'botId',\n      'conversationId',\n      'dialogId',\n      'nodeId',\n    ];\n\n    return (\n      requiredParamKeys.every((key) => searchParams.has(key)) &&\n      envIdToEnvPath.hasOwnProperty(searchParams.get('envId'))\n    );\n  };\n\n  const getDialog = async ({ botId, conversationId, dialogId, envId, jwt }) => {\n    const url = `${\n      API_CONFIG.papiUrl\n    }/chatbot/bots/${botId}/conversations/${conversationId}/dialogs/${dialogId}`;\n    return featchDataFromServer(url, envId, jwt);\n  };\n\n  const getNode = ({ botId, conversationId, dialogId, nodeId, envId, jwt, bbCodes }) => {\n    let url = `${\n      API_CONFIG.papiUrl\n    }/chatbot/bots/${botId}/conversations/${conversationId}/dialogs/${dialogId}/nodes/${nodeId}`;\n    if (bbCodes) {\n      url = url + `?bbCodes=${bbCodes}`;\n    }\n    return featchDataFromServer(url, envId, jwt);\n  };\n\n  const featchDataFromServer = async (url, envId, jwt) => {\n    const fetchData = await new Promise((resolve) => {\n      wmjQuery.ajax({\n        url,\n        type: 'GET',\n        beforeSend: function(xhr) {\n          xhr.setRequestHeader('content-type', 'application/json');\n          xhr.setRequestHeader('authorization', `Bearer ${jwt}`);\n          xhr.setRequestHeader('x-wmab-wmenv', envId);\n        },\n        success: resolve,\n      });\n    });\n\n    return fetchData;\n  };\n\n  const normalizeAnswers = (rawAnswers, nodeData) => {\n    const { settings = {} } = nodeData;\n    const { app } = settings;\n\n    const answers = Object.entries(rawAnswers).reduce((acc, [key, descriptor]) => {\n      if (descriptor && descriptor.type === 'conversationVariable') {\n        return typeof descriptor.value === 'object'\n          ? {\n              ...acc,\n              ...Object.entries(descriptor.value).reduce(\n                (innerAcc, [innerKey, innerValue]) => ({\n                  ...innerAcc,\n                  [innerKey]: { value: innerValue, nodeId: Number(key) },\n                }),\n                {}\n              ),\n            }\n          : acc;\n      }\n\n      return { ...acc, [key]: { ...descriptor, nodeId: Number(key) } };\n    }, {});\n\n    if (appTypesWithDataMapping.includes(app)) {\n      const { dataMapping = {} } = nodeData;\n\n      return Object.entries(dataMapping).reduce((acc, [key, value]) => {\n        return { ...acc, [value]: answers[key] };\n      }, {});\n    }\n\n    return {};\n  };\n\n  const runDeployable = async (params) => {\n    const jwt = params.get('jwt');\n    const botId = params.get('botId');\n    const conversationId = params.get('conversationId');\n    const dialogId = params.get('dialogId');\n    const envId = params.get('envId');\n    const nodeId = params.get('nodeId');\n    const bbCodes = params.get('bbCodes');\n\n    const classWalkMeAPI = window._walkmeInternals.ctx.get('ClassWalkMeAPI');\n    const shoutOutsManager = window._walkmeInternals.ctx.get('ShoutOutsManager');\n    const shuttlesManager = window._walkmeInternals.ctx.get('ShuttlesManager');\n    const siteConfigManager = window._walkmeInternals.ctx.get('SiteConfigManager').get();\n\n    const appTypeToWmActionHandler = {\n      START_WALKTHRU: (id) => classWalkMeAPI.startFlowById(id),\n      START_SMARTWALKTHRU: (id) => classWalkMeAPI.startFlowById(id),\n      SMARTWALKTHRU: (id) => classWalkMeAPI.startFlowById(id),\n      WALKTHRU: (id) => classWalkMeAPI.startWalkthruById(id),\n      SURVEY: (id) => classWalkMeAPI.startSurveyById(id),\n      SHOUTOUT: (id) => shoutOutsManager.activateById(id),\n      RESOURCE: (id) => classWalkMeAPI.startContentById(id),\n      SHUTTLE: (id) => shuttlesManager.activateById(id),\n    };\n\n    try {\n      const { data: rawAnswers } = await getDialog({ botId, conversationId, dialogId, envId, jwt });\n      const { Custom: jsonSettings } = siteConfigManager || {};\n      const { actionbot: actionBotCustomSettings } = jsonSettings || {};\n\n      const rawNode = await getNode({\n        botId,\n        conversationId,\n        dialogId,\n        nodeId,\n        envId,\n        jwt,\n        bbCodes,\n      });\n\n      const answers = normalizeAnswers(rawAnswers, rawNode);\n\n      if (\n        rawNode.settings.webSystemGuid &&\n        rawNode.settings.destinationUrl &&\n        rawNode.settings.permalink\n      ) {\n        saveAnswersToStorage(answers, actionBotCustomSettings, rawNode.settings.webSystemGuid);\n        refreshGetData(answers, appTypeToWmActionHandler, rawNode, {\n          botId,\n          conversationId,\n          dialogId,\n        });\n\n        let destinationUrl = rawNode.customDestinationUrl\n          ? rawNode.customDestinationUrl\n          : rawNode.settings.destinationUrl;\n        location.href = `${destinationUrl}${rawNode.settings.permalink}`;\n        return;\n      }\n\n      let accountsToSync = [undefined];\n\n      try {\n        const { syncSwtDataToOtherAccounts } = actionBotCustomSettings || {};\n\n        if (syncSwtDataToOtherAccounts && syncSwtDataToOtherAccounts.length) {\n          const syncSwtDataMatchingRecords = syncSwtDataToOtherAccounts.filter((item) => {\n            if (Array.isArray(item.conversationId)) {\n              return item.conversationId.map(Number).indexOf(Number(conversationId)) > -1;\n            }\n\n            return Number(item.conversationId) === Number(conversationId);\n          });\n\n          if (syncSwtDataMatchingRecords && syncSwtDataMatchingRecords.length) {\n            const accountsGuids = syncSwtDataMatchingRecords.reduce((acc, item) => {\n              if (item && item.accountGuids && item.accountGuids.length) {\n                return acc.concat(item.accountGuids);\n              }\n\n              return acc;\n            }, []);\n\n            accountsToSync = accountsToSync.concat(accountsGuids);\n          }\n        }\n      } catch (e) {\n        console.error(e);\n      }\n\n      accountsToSync.forEach((account) => {\n        saveAnswersToStorage(answers, actionBotCustomSettings, account);\n      });\n\n      refreshGetData(answers, appTypeToWmActionHandler, rawNode, {\n        botId,\n        conversationId,\n        dialogId,\n      });\n    } catch (e) {\n      console.error(e);\n      console.warn(\n        'Unable to launch deployable. Please reload the page or check parameters validity.'\n      );\n    }\n  };\n\n  const saveAnswersToStorage = (answers, actionBotCustomSettings, account) => {\n    const clientStorageManager = window._walkmeInternals.ctx.get('ClientStorageManager');\n    Object.entries(answers).forEach(([key, value]) => {\n      let ttl;\n      try {\n        const swtDataTTL = actionBotCustomSettings && actionBotCustomSettings.swtDataTTL;\n\n        if (swtDataTTL && swtDataTTL.length) {\n          const node = swtDataTTL.find((item) => {\n            if (Array.isArray(item.nodeId)) {\n              return item.nodeId.map(Number).indexOf(value.nodeId) > -1;\n            }\n\n            return Number(item.nodeId) === value.nodeId;\n          });\n\n          ttl = Number(node && node.ttl);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n\n      clientStorageManager.saveData(`${PREFIX}${key}`, value, VALUES_LIFE_TIME, account);\n    });\n\n    clientStorageManager.saveData(\n      `${PREFIX}web-integration`,\n      { forceLoad: 1 },\n      VALUES_LIFE_TIME,\n      account\n    );\n  };\n\n  const refreshGetData = (answers, appTypeToWmActionHandler, rawNode, payloadOptions) => {\n    const clientStorageManager = window._walkmeInternals.ctx.get('ClientStorageManager');\n    const commonEvents = window._walkmeInternals.ctx.get('CommonEvents');\n\n    clientStorageManager.refreshGetData(null, async () => {\n      const nodeSettings = rawNode.settings || {};\n      const wmActionHandler = appTypeToWmActionHandler[nodeSettings.app];\n\n      if (wmActionHandler && nodeSettings.id) {\n        const payload = {\n          settings: nodeSettings,\n          answers,\n          options: payloadOptions,\n        };\n\n        commonEvents.raiseEvent('WM_BOT_DUI_ACTION', payload);\n\n        window.open = (url) => {\n          location.href = url;\n        };\n        await wmActionHandler(nodeSettings.id);\n      }\n    });\n  };\n\n  const loadUserSnippet = (params, onReadyCallback) => {\n    window.walkme_ready = onReadyCallback;\n\n    const userGuid = params.get('userGuid');\n    const envPath = envIdToEnvPath[params.get('envId')];\n    const snippetSrc = `${\n      API_CONFIG.cdnUrl\n    }/users/${userGuid}${envPath}/walkme_${userGuid}_https.js`;\n    const walkmeScript = document.createElement('script');\n\n    walkmeScript.type = 'text/javascript';\n    walkmeScript.src = snippetSrc;\n\n    document.body.append(walkmeScript);\n  };\n\n  const forceProxyStorage = () => {\n    const exDate = new Date();\n    exDate.setTime(exDate.getTime() + 100000);\n\n    const expireString = '; expires=' + exDate.toUTCString() + '; path=/';\n    document.cookie = 'wm-stt=proxy' + expireString;\n  };\n\n  if (paramsAreValid(params)) {\n    forceProxyStorage();\n    loadUserSnippet(params, () => runDeployable(params));\n  } else {\n    console.warn('Required parameter is missing or malformed.');\n  }\n});\n"],"file":"index.js"}