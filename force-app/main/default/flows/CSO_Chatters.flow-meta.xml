<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>ExceptionApproved</name>
        <label>ExceptionApproved</label>
        <locationX>2338</locationX>
        <locationY>384</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>ExceptionApprovedMsg</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Opportunity__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>ExceptionRejected</name>
        <label>ExceptionRejected</label>
        <locationX>2602</locationX>
        <locationY>384</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>ExceptionRejectedMsg</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Opportunity__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>First_Payroll_Ran_Chatter</name>
        <label>First Payroll Ran Chatter</label>
        <locationX>578</locationX>
        <locationY>384</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>FirstPayrollChatter</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Opportunity__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>First_Run_Date_Changed_Chatter</name>
        <label>First Run Date Changed Chatter</label>
        <locationX>842</locationX>
        <locationY>384</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>FirstRunDateChatter</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Opportunity__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Message_On_Submit</name>
        <label>Message On Submit</label>
        <locationX>1546</locationX>
        <locationY>384</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>MessageOnSubmit</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Opportunity__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>MSA_Chatter</name>
        <label>MSA Chatter</label>
        <locationX>50</locationX>
        <locationY>384</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>MSAChatter</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Opportunity__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>New_Exception_Logged</name>
        <label>New Exception Logged</label>
        <locationX>2074</locationX>
        <locationY>492</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>NewExceptionLogged</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>type</name>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>New_Exception_Logged2</name>
        <label>New Exception Logged2</label>
        <locationX>1810</locationX>
        <locationY>492</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>NewExceptionLogged2</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Prior_Wages</name>
        <label>Prior Wages</label>
        <locationX>2866</locationX>
        <locationY>384</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>PriorWagesChatter</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Opportunity__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Resend_Post</name>
        <label>Resend Post</label>
        <locationX>3834</locationX>
        <locationY>492</locationY>
        <actionName>CsoInvocableActions</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Stalled_Chatter</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>csoContactList</name>
            <value>
                <elementReference>Get_CSO_Contacts</elementReference>
            </value>
        </inputParameters>
        <nameSegment>CsoInvocableActions</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Notification_to_Opp_Owner</name>
        <label>Send Notification to Opp Owner</label>
        <locationX>4362</locationX>
        <locationY>384</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>FirstStepNotCompletedMessage</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Opportunity__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Stalled_Chatter</name>
        <label>Stalled Chatter</label>
        <locationX>3042</locationX>
        <locationY>995</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>StallChatter</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Opportunity__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Unstalled_Chatter</name>
        <label>Unstalled Chatter</label>
        <locationX>1282</locationX>
        <locationY>600</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>UnstalledChatter</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Opportunity__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Wizard_Chatter</name>
        <label>Wizard Chatter</label>
        <locationX>314</locationX>
        <locationY>384</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>WizardSubmitted</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Opportunity__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <decisions>
        <name>Has_First_Steps_been_completed</name>
        <label>Has First Steps been completed?</label>
        <locationX>4494</locationX>
        <locationY>276</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Not_Completed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.FirstStepsCompleted__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Notification_to_Opp_Owner</targetReference>
            </connector>
            <label>Not Completed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Have_they_logged_in</name>
        <label>Have they logged in?</label>
        <locationX>3966</locationX>
        <locationY>276</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_if_they_logged_in</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.FirstStepsCompleted__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Contact__r.FlexUEID__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RegistrationStarted__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_CSO_Contacts</targetReference>
            </connector>
            <label>Check if they have not logged in</label>
        </rules>
    </decisions>
    <decisions>
        <name>How_Many_Approvers</name>
        <label>How Many Approvers</label>
        <locationX>1942</locationX>
        <locationY>384</locationY>
        <defaultConnector>
            <targetReference>New_Exception_Logged</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Just 1 approver</defaultConnectorLabel>
        <rules>
            <name>Are_2_approvers</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ExceptionApprover2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>New_Exception_Logged2</targetReference>
            </connector>
            <label>Are 2 approvers?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_still_stalled</name>
        <label>Is still stalled</label>
        <locationX>3482</locationX>
        <locationY>276</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_it_Still_Stalled</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsStalled__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Stalled_Chatter</targetReference>
            </connector>
            <label>Is it Still Stalled?</label>
        </rules>
    </decisions>
    <decisions>
        <name>WhatActionHappened</name>
        <label>What action happened?</label>
        <locationX>1590</locationX>
        <locationY>276</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>MSA_Received</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.DocMSAReceived__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>MSA_Chatter</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>MSA Received?</label>
        </rules>
        <rules>
            <name>Wizard_Submitted</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SubmitCompleted__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Wizard_Chatter</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Wizard Submitted?</label>
        </rules>
        <rules>
            <name>First_Payroll_Run</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.FirstPayrollRun__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>First_Payroll_Ran_Chatter</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>First Payroll Run?</label>
        </rules>
        <rules>
            <name>First_Run_Date_Changed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.FirstPayrollRunDate__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FirstPayrollRunDate__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.FirstPayrollRunDate__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FirstPayrollRun__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>First_Run_Date_Changed_Chatter</targetReference>
            </connector>
            <label>First Run Date Changed?</label>
        </rules>
        <rules>
            <name>Became_Stalled</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsStalled__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>StalledTimeFrame</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Stalled_Chatter</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Became Stalled</label>
        </rules>
        <rules>
            <name>Unstalled</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.LatestActionDate__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>$Record.ClientStalledLatest__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ClientStalledLatest__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_unstalled_date</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Unstalled</label>
        </rules>
        <rules>
            <name>Submit</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RegistrationStart__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RegistrationStart__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Message_On_Submit</targetReference>
            </connector>
            <label>Submit</label>
        </rules>
        <rules>
            <name>Exception_Logged</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ExceptionStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ExceptionNeedApproval__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ExceptionStatus__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>How_Many_Approvers</targetReference>
            </connector>
            <label>Exception Logged?</label>
        </rules>
        <rules>
            <name>Exception_Approved</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ExceptionStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Approved</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ExceptionNeedApproval__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ExceptionStatus__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ExceptionApproved</targetReference>
            </connector>
            <label>Exception Approved?</label>
        </rules>
        <rules>
            <name>Exception_Rejected</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ExceptionStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Rejected</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ExceptionNeedApproval__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ExceptionStatus__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ExceptionRejected</targetReference>
            </connector>
            <label>Exception Rejected</label>
        </rules>
        <rules>
            <name>Prior_Wages_c</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.PriorWages__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Yes</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Prior_Wages</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Prior_Wages__c?</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <description>Was this stalled within the specified timeframe so the chatter happens immediately?</description>
        <name>StalledTimeFrame</name>
        <dataType>Boolean</dataType>
        <expression>DateValue({!$Record.ClientStalled__c}) &lt; ({!$Record.FirstRunFormula__c} + 365)</expression>
    </formulas>
    <interviewLabel>CSO Chatters {!$Flow.CurrentDateTime}</interviewLabel>
    <label>CSO Chatters</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_CSO_Contacts</name>
        <label>Get CSO Contacts</label>
        <locationX>3834</locationX>
        <locationY>384</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Resend_Post</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Contact__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Set_unstalled_date</name>
        <label>Set unstalled date</label>
        <locationX>1282</locationX>
        <locationY>384</locationY>
        <connector>
            <targetReference>Set_Unstalled_latest</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ClientUnstalled__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <inputAssignments>
            <field>ClientUnstalled__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Set_Unstalled_latest</name>
        <label>Set Unstalled latest</label>
        <locationX>1282</locationX>
        <locationY>492</locationY>
        <connector>
            <targetReference>Unstalled_Chatter</targetReference>
        </connector>
        <inputAssignments>
            <field>ClientUnstalledLatest__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>2916</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>WhatActionHappened</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Opportunity__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>IsOppCso__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>CSO_Tracking__c</object>
        <recordTriggerType>Update</recordTriggerType>
        <scheduledPaths>
            <name>Stalled_With_X_Days</name>
            <connector>
                <targetReference>Is_still_stalled</targetReference>
            </connector>
            <label>Stalled With X Days</label>
            <offsetNumber>-365</offsetNumber>
            <offsetUnit>Days</offsetUnit>
            <recordField>FirstRunFormula__c</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <scheduledPaths>
            <name>First_Run_Date</name>
            <connector>
                <targetReference>Have_they_logged_in</targetReference>
            </connector>
            <label>First Run Date</label>
            <offsetNumber>-10</offsetNumber>
            <offsetUnit>Days</offsetUnit>
            <recordField>FirstRunFormula__c</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <scheduledPaths>
            <name>First_Steps_Not_Completed</name>
            <connector>
                <targetReference>Has_First_Steps_been_completed</targetReference>
            </connector>
            <label>First Steps Not Completed</label>
            <offsetNumber>2</offsetNumber>
            <offsetUnit>Days</offsetUnit>
            <recordField>RegistrationEnd__c</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>ExceptionApprovedMsg</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.ExceptionRequestUser__c}] The exception for {!$Record.Opportunity__r.Name} has been approved. Please proceed with your traditional submission.
Details: {!$Record.ExceptionAcceptRejectDescipt__c}</text>
    </textTemplates>
    <textTemplates>
        <name>ExceptionRejectedMsg</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.ExceptionRequestUser__c}] The exception for {!$Record.Opportunity__r.Name} has been rejected. Please review the rejection notes and either re-submit a new exception or submit with the Easy Setup process.
Details: {!$Record.ExceptionAcceptRejectDescipt__c}</text>
    </textTemplates>
    <textTemplates>
        <name>FirstPayrollChatter</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.Opportunity__r.OwnerId}] {!$Record.AccountId__r.Name} {!$Record.AccountId__r.AccountNumber} has successfully run their first payroll with a check date of {!$Record.FirstCheckDate__c}! @[{!$Record.Opportunity__r.Owner.DSA_FSS__c}] @[{!$Record.Opportunity__r.Owner.ManagerId}]</text>
    </textTemplates>
    <textTemplates>
        <name>FirstRunDateChatter</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.Opportunity__r.OwnerId}] {!$Record.AccountId__r.Name} {!$Record.AccountId__r.AccountNumber} has modified their run date from {!$Record__Prior.FirstPayrollRunDate__c} to {!$Record.FirstPayrollRunDate__c} @[{!$Record.Opportunity__r.Owner.DSA_FSS__c}] @[{!$Record.Opportunity__r.Owner.ManagerId}]</text>
    </textTemplates>
    <textTemplates>
        <name>FirstStepNotCompletedMessage</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Hello @[{!$Record.Opportunity__r.OwnerId}] Please be aware that {!$Record.Contact__r.FirstName} {!$Record.Contact__r.LastName} at {!$Record.AccountId__r.Name} was sent the registration email for Easy On-boarding but has not completed registration. The email that the registration was sent to was {!$Record.Contact__r.Email}. Please reach out to the contact to assist with registration.</text>
    </textTemplates>
    <textTemplates>
        <name>MessageOnSubmit</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.Opportunity__r.OwnerId}], {!$Record.AccountId__r.Name} has been sent the registration email for Easy Setup {!$Record.RegistrationStart__c}. No need to reach out at this time.</text>
    </textTemplates>
    <textTemplates>
        <name>MSAChatter</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.Opportunity__r.OwnerId}] {!$Record.Contact__r.FirstName} {!$Record.Contact__r.LastName} from {!$Record.AccountId__r.Name} has completed signing the Service agreements as of {!$Record.DocMSAReceived__c}. The next notification you will receive will be when the client has completed their registration within the Wizard. 
@[{!$Record.Opportunity__r.Owner.DSA_FSS__c}] @[{!$Record.Opportunity__r.Owner.ManagerId}]</text>
    </textTemplates>
    <textTemplates>
        <name>NewExceptionLogged</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.ExceptionApprover__c}]
An Exception has been submitted by {!$User.FirstName} {!$User.LastName} for {!$Record.AccountId__r.Name} to go through traditional onboarding with a reason of: {!$Record.CsoExceptionList__c}, {!$Record.CsoExceptionDetail__c}.

Exceptions should NOT be submitted for:
Clients who require additional level of service - Select Assisted Setup in CPQ
Clients who would like auto or call in payroll after implementation
Multi ID clients (unless sharing EIN#)
Clients with Wages (leverage Data Extraction or Assisted Setup)
If Sales Rep has collected paperwork/reports (Submit with Client Name to FlexOnboarding@paychex.com

Please click on the Opportunity name at the top of the chatter, to Approve or Deny, and indicate reasoning in the Exception info section of the form</text>
    </textTemplates>
    <textTemplates>
        <description>Use if the delegated user is filled out also</description>
        <name>NewExceptionLogged2</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.ExceptionApprover__c}] @[{!$Record.ExceptionApprover2__c}]
An Exception has been submitted by {!$User.FirstName} {!$User.LastName} for {!$Record.AccountId__r.Name} to go through traditional onboarding with a reason of: {!$Record.CsoExceptionList__c}, {!$Record.CsoExceptionDetail__c}.

Exceptions should NOT be submitted for:
Clients who require additional level of service - Select Assisted Setup in CPQ
Clients who would like auto or call in payroll after implementation
Multi ID clients (unless sharing EIN#)
Clients with Wages (leverage Data Extraction or Assisted Setup)
If Sales Rep has collected paperwork/reports (Submit with Client Name to FlexOnboarding@paychex.com

Please click on the Opportunity name at the top of the chatter, to Approve or Deny, and indicate reasoning in the Exception info section of the form</text>
    </textTemplates>
    <textTemplates>
        <name>PriorWagesChatter</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.Opportunity__r.OwnerId}] {!$Record.AccountId__r.Name} has selected YES to having Prior Wages during their onboarding and the CER team is engaging. Please Submit a Data Extraction request if you haven&apos;t already by Using the Submit Extraction request button on your opportunity. Please be advised completion of their onboarding may take a little longer due to the client needing wages. 
@[{!$Record.Opportunity__r.Owner.DSA_FSS__c}] @[{!$Record.Opportunity__r.Owner.ManagerId}]</text>
    </textTemplates>
    <textTemplates>
        <description>The chatter message when a stall happens</description>
        <name>StallChatter</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.Opportunity__r.OwnerId}] {!$Record.AccountId__r.Name} has stalled in the Easy Setup process. 
Last Step Completed: {!$Record.LatestAction__r.Action__c} Completed Date: {!$Record.LatestAction__r.CompletedDateTime__c}
Action Required: Reach out to the client to see what led to the stall and attempt to re-engage the client in the Easy Setup process in Flex to meet the First Run Date of {!$Record.Opportunity__r.CloseDate}.
@[{!$Record.Opportunity__r.Owner.DSA_FSS__c}] @[{!$Record.Opportunity__r.Owner.ManagerId}]</text>
    </textTemplates>
    <textTemplates>
        <name>UnstalledChatter</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.Opportunity__r.OwnerId}] {!$Record.AccountId__r.Name} has now made progress in the Easy Setup process. There is no longer a need for you to reach out at this time. @[{!$Record.Opportunity__r.Owner.DSA_FSS__c}] @[{!$Record.Opportunity__r.Owner.ManagerId}]</text>
    </textTemplates>
    <textTemplates>
        <name>WizardSubmitted</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.Opportunity__r.OwnerId}] {!$Record.Contact__r.FirstName} {!$Record.Contact__r.LastName} from {!$Record.AccountId__r.Name} has completed the registration process within the Flex Wizard. You will be notified once the client has completed their first payroll run. @[{!$Record.Opportunity__r.Owner.DSA_FSS__c}] @[{!$Record.Opportunity__r.Owner.ManagerId}]</text>
    </textTemplates>
    <triggerOrder>10</triggerOrder>
</Flow>
