<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Chatter_Owner_New_Case_Comments</name>
        <label>Chatter Owner New Case Comments</label>
        <locationX>2580</locationX>
        <locationY>431</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <connector>
            <targetReference>Based_on_Record_Type</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>NewCaseCommentsChatter</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Email_Assigned_Specialist</name>
        <label>Email Assigned Specialist</label>
        <locationX>3218</locationX>
        <locationY>839</locationY>
        <actionName>Case.Email_Assigned_Specialist</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Notify_Owner_Email</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Email_Assigned_Specialist</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Notify Case creator that related 401k/S125 Case is closed</description>
        <name>Notify_Case_creator_that_related_401k_S125_Case_is_closed</name>
        <label>Notify Case creator that related 401k/S125 Case is closed</label>
        <locationX>2690</locationX>
        <locationY>731</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>NotifyCasecreatorthatrelated401kS125Caeiscloseds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>S2S_Case_Assigned_to_Flex_GL_Supervisor_Queue</name>
        <label>S2S Case Assigned to Flex GL Supervisor Queue</label>
        <locationX>3218</locationX>
        <locationY>1739</locationY>
        <actionName>Case.S2S_Case_Assigned_to_Flex_GL_Supervisor_Queue</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Check_to_Notify_HRG</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.S2S_Case_Assigned_to_Flex_GL_Supervisor_Queue</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>S2S_Case_Assigned_to_MSP_HRS_Ops_Mgmt_Queue</name>
        <label>S2S Case Assigned to MSP HRS Ops Mgmt Queue</label>
        <locationX>3482</locationX>
        <locationY>1739</locationY>
        <actionName>Case.S2S_Case_Assigned_to_MSP_HRS_Ops_Mgmt_Queue</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Check_to_Notify_HRG</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.S2S_Case_Assigned_to_MSP_HRS_Ops_Mgmt_Queue</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Post a chatter directly to the HRG</description>
        <name>S2S_Chatter_HRG</name>
        <label>S2S Chatter HRG</label>
        <locationX>3218</locationX>
        <locationY>2039</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <stringValue>The Status for client {!$Record.Account.Name} has been updated to {!$Record.Status}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Account.HR_Generalist__r.User_Lookup__r.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>S2S_Email_Contact</name>
        <label>S2S Email Contact</label>
        <locationX>3086</locationX>
        <locationY>1139</locationY>
        <actionName>Case.S2S_Email_Notification_to_Contact</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Check_For_Chatter</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.S2S_Email_Notification_to_Contact</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>S2S_Email_Ref_Ctct</name>
        <label>S2S Email Ref Ctct</label>
        <locationX>3350</locationX>
        <locationY>1139</locationY>
        <actionName>Case.S2S_Email_Notification_to_Referral_Contact</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Check_For_Chatter</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.S2S_Email_Notification_to_Referral_Contact</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>S2S_Ref_Acct_Chatter_Alt_Ctct</name>
        <label>S2S Ref Acct Chatter Alt Ctct</label>
        <locationX>3922</locationX>
        <locationY>839</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>S2SStatusChangeRefAcctAltContact</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>S2S_Ref_Acct_Chatter_No_Alt</name>
        <label>S2S Ref Acct Chatter No Alt</label>
        <locationX>4186</locationX>
        <locationY>839</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>S2SStatusChangeRefAcctNoAltCtct</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>S2S_Status_Change_Alt_Contact</name>
        <label>S2S Status Change Alt Contact</label>
        <locationX>3350</locationX>
        <locationY>1439</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <connector>
            <targetReference>Case_Arrived_in_Queue</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>S2SChatterPostAltContact</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>S2SNotify_Queue</name>
        <label>Notify Queue</label>
        <locationX>2954</locationX>
        <locationY>1739</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <connector>
            <targetReference>Check_to_Notify_HRG</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>S2SCaseArrivedInQueue</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_an_email_when_the_owner_changes_0_0</name>
        <label>Send an email when the owner changes</label>
        <locationX>50</locationX>
        <locationY>839</locationY>
        <actionName>Case.Sending_an_email_to_user_on_Service_STM_Cases_when_it_is_updated_other_than_user</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Do_We_Send_STM_PFT_Billing_Audit_Email</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Sending_an_email_to_user_on_Service_STM_Cases_when_it_is_updated_other_than_user</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_STM_PFT_Billing_Audit_Email2</name>
        <label>Send STM-PFT Billing Audit Email</label>
        <locationX>50</locationX>
        <locationY>1139</locationY>
        <actionName>Case.Send_STM_PFT_Billing_Audit_Email</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>STM_PFT_Billing_Audit_Email_sent</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Send_STM_PFT_Billing_Audit_Email</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Status_Update_No_Alt_Contact</name>
        <label>Status Update No Alt Contact</label>
        <locationX>3086</locationX>
        <locationY>1439</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <connector>
            <targetReference>Case_Arrived_in_Queue</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <elementReference>S2SChatterPost</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>53.0</apiVersion>
    <assignments>
        <name>MPSC_Reference_Core_Payroll</name>
        <label>MPSC Reference Core Payroll</label>
        <locationX>1106</locationX>
        <locationY>731</locationY>
        <assignmentItems>
            <assignToReference>newRefCorePay.Case_Lookup__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newRefCorePay.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newRefCorePay.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>0120g000000chlvAAA</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_MPSC_Ref_Core_Pay</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Reference_Incoming_Funds</name>
        <label>Set Reference Incoming Funds</label>
        <locationX>578</locationX>
        <locationY>731</locationY>
        <assignmentItems>
            <assignToReference>ReferenceIncomingFunds.Case_Lookup__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ReferenceIncomingFunds.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>0120g000000EAXS</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_a_Reference_Incoming_Funds</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Based_on_Record_Type</name>
        <label>Based on Record Type</label>
        <locationX>2712</locationX>
        <locationY>623</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>STM_Record_Type</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Service Support STM Case</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Owner_Change_Email</targetReference>
            </connector>
            <label>Service Support STM Case</label>
        </rules>
        <rules>
            <name>Create_Reference_Incoming_Funds</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>401k/S125 Operations Support</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Termination_Transfer_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Miscellaneous Check</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Reference_Incoming_Funds</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Create Reference Incoming Funds</label>
        </rules>
        <rules>
            <name>Reject_Ref_Core_Payroll</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MPSC Client Audit</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue> Closed - Rejected</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Reject_Ref_Core_Payroll_Recs</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Reject Ref Core Payroll</label>
        </rules>
        <rules>
            <name>MPSC_Data_Collection_Owner</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MPSC_Data_Collection</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>MPSC_Reference_Core_Payroll</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>MPSC Data Collection Owner</label>
        </rules>
        <rules>
            <name>Create_HRS_4S_Manual_Trade</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Termination_Transfer_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Manual Trade – Distribution</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Termination_Transfer_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Manual Trade – Loan Processing</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Termination_Transfer_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Manual Trade – Distribution Correction</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Save_Reference_Operations_Support</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Create HRS 4S Manual Trade</label>
        </rules>
        <rules>
            <name>MPSC_Update_Service_Location</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Service Onboarding MPSC Core Payroll Case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Service_Location__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Service_Location</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>MPSC Update Service Location</label>
        </rules>
        <rules>
            <name>Service_Support_PEO</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Service Support PEO</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>PEO_Safety_Decision</targetReference>
            </connector>
            <label>Service Support PEO</label>
        </rules>
        <rules>
            <name>Related_401k_S125_Case_is_closed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>401k/S125 Operations Support</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ParentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Service Support 401k/S125 Case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Notify_Case_creator_that_related_401k_S125_Case_is_closed</targetReference>
            </connector>
            <label>Related 401k/S125 Case is closed</label>
        </rules>
        <rules>
            <name>Sales2Service_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Sales2Service Case</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_for_Escalation_Email</targetReference>
            </connector>
            <label>Sales2Service Case</label>
        </rules>
        <rules>
            <name>Service_Support_ACT_Case_Record_Type</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Service Support ACT Case Record Type</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_There_An_Alt_Contact</targetReference>
            </connector>
            <label>Service Support ACT Case Record Type</label>
        </rules>
        <rules>
            <name>X401k_S125_Operations_Support_record_type</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>401k/S125 Operations Support</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>X401k_S125_Operations_Support</targetReference>
            </connector>
            <label>401k/S125 Operations Support record type</label>
        </rules>
    </decisions>
    <decisions>
        <name>Case_Arrived_in_Queue</name>
        <label>Case Arrived in Queue</label>
        <locationX>3350</locationX>
        <locationY>1631</locationY>
        <defaultConnector>
            <targetReference>Check_to_Notify_HRG</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_If_Flex_Forward</name>
            <conditionLogic>1 AND ((2 AND 3) OR 4)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Product__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>401K</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>401k/S125 Sales Escalation Queue</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Flex Forward Escalations</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>S2SNotify_Queue</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Check If Flex Forward or Sales Escalation</label>
        </rules>
        <rules>
            <name>Owner_Is_Flex_GL_Supervisors</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Flex GL Supervisors</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>S2S_Case_Assigned_to_Flex_GL_Supervisor_Queue</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Owner Is Flex GL Supervisors</label>
        </rules>
        <rules>
            <name>Owner_Is_MSP_HRS_Ops_Mgmt_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MSP HRS Ops Mgmt Queue</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>S2S_Case_Assigned_to_MSP_HRS_Ops_Mgmt_Queue</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Owner Is MSP HRS Ops Mgmt Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_For_Chatter</name>
        <label>Check For Chatter</label>
        <locationX>3350</locationX>
        <locationY>1331</locationY>
        <defaultConnector>
            <targetReference>Case_Arrived_in_Queue</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Update_Status_no_Alt</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Alternate_Contact__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Status_Update_No_Alt_Contact</targetReference>
            </connector>
            <label>Update Status no Alt</label>
        </rules>
        <rules>
            <name>Update_status_w_alternate_contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Alternate_Contact__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Alternate_Contact__r.User_Lookup__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>S2S_Status_Change_Alt_Contact</targetReference>
            </connector>
            <label>Update status w/alternate contact</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_for_Escalation_Email</name>
        <label>Check for Escalation Email</label>
        <locationX>3350</locationX>
        <locationY>731</locationY>
        <defaultConnector>
            <targetReference>Notify_Owner_Email</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Was_escalated</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsEscalated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Assister__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Email_Assigned_Specialist</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Was escalated</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_to_Notify_HRG</name>
        <label>Check to Notify HRG</label>
        <locationX>3350</locationX>
        <locationY>1931</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_There_an_HRG</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.HR_Generalist__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Account.HR_Generalist__r.User_Lookup__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>S2S_Chatter_HRG</targetReference>
            </connector>
            <label>Is There an HRG?</label>
        </rules>
    </decisions>
    <decisions>
        <description>when Billing Audit Email is checked, send STM/PFT Billing Audit Email to Contact</description>
        <name>Do_We_Send_STM_PFT_Billing_Audit_Email</name>
        <label>Do We Send STM-PFT Billing Audit Email</label>
        <locationX>182</locationX>
        <locationY>1031</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Send_STM_PFT_Billing_Audit_Email</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Billing_Audit_Email__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Billing_Audit_Email__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Contact.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_STM_PFT_Billing_Audit_Email2</targetReference>
            </connector>
            <label>Send STM-PFT Billing Audit Email</label>
        </rules>
    </decisions>
    <decisions>
        <name>Does_it_have_case_comments</name>
        <label>Does it have case comments?</label>
        <locationX>2712</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>Based_on_Record_Type</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_for_Case_Comments</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Has_New_Case_Comment__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Chatter_Owner_New_Case_Comments</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Check for Case Comments</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_There_An_Alt_Contact</name>
        <label>Is There An Alt Contact?</label>
        <locationX>4186</locationX>
        <locationY>731</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Status_Update_w_alt_Contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Alternate_Contact__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>S2S_Ref_Acct_Chatter_Alt_Ctct</targetReference>
            </connector>
            <label>Status Update w/ alt Contact</label>
        </rules>
        <rules>
            <name>RefCtct_Status_Update_no_alt_Contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Alternate_Contact__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>S2S_Ref_Acct_Chatter_No_Alt</targetReference>
            </connector>
            <label>Status Update no alt Contact</label>
        </rules>
    </decisions>
    <decisions>
        <name>Notify_Owner_Email</name>
        <label>Notify Owner Email</label>
        <locationX>3350</locationX>
        <locationY>1031</locationY>
        <defaultConnector>
            <targetReference>Check_For_Chatter</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Notify_Contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Notify_Owner__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Contact.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>S2S_Email_Contact</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Notify Contact</label>
        </rules>
        <rules>
            <name>Notify_Ref_Contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Notify_Owner__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Referral_Contact__r.Email__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>S2S_Email_Ref_Ctct</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Notify Ref Contact</label>
        </rules>
    </decisions>
    <decisions>
        <name>Owner_Change_Email</name>
        <label>Owner Change Email?</label>
        <locationX>182</locationX>
        <locationY>731</locationY>
        <defaultConnector>
            <targetReference>Do_We_Send_STM_PFT_Billing_Audit_Email</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Did_the_owner_change</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$User.Id</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.CreatedById</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$User.Username</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>sfdc_automation@paychex.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:User.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:User.Email</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>center_of_excellence@paychex.com</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_an_email_when_the_owner_changes_0_0</targetReference>
            </connector>
            <label>Did the owner change?</label>
        </rules>
    </decisions>
    <decisions>
        <name>PEO_Safety_Decision</name>
        <label>PEO Safety Decision</label>
        <locationX>2162</locationX>
        <locationY>731</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Create_a_Safety_Task</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.PEO_Safety_Category_1__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue> RA Update with Class Code Changes</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.PEO_Safety_Category_1__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue> RA Update without Class Changes</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_Safety_Task</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Create a Safety Task</label>
        </rules>
        <rules>
            <name>Create_Support_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Product__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Taxes</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Discrepancy_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Client Level SUI</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Discrepancy_Sub_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Transfer to Parent Owner</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_PEO_Support_Case</targetReference>
            </connector>
            <label>Create Support Case</label>
        </rules>
    </decisions>
    <decisions>
        <name>X401k_S125_Operations_Support</name>
        <label>401k/S125 Operations Support</label>
        <locationX>4846</locationX>
        <locationY>731</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Create_Reference_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Product__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>401K</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Termination_Transfer_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PEP Payroll NSF</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_Reference_401k_S125_record</targetReference>
            </connector>
            <label>Create Reference Case</label>
        </rules>
    </decisions>
    <description>These are actions that happen after the save for the following record types:
Service Support STM Case
401k/S125 Operations Support
Service Support MPSC Case
MPSC Client Audit
Service Onboarding MPSC Core Payroll Case
Service Support PEO Safety Case
Service Support MPSC Analyst Case
Sales2Service Case
Service Support ACT Case Record Type</description>
    <environments>Default</environments>
    <formulas>
        <name>IsNew</name>
        <dataType>Boolean</dataType>
        <expression>Isnew()</expression>
    </formulas>
    <formulas>
        <description>Based on the attributes of the case, get the owner id of the related case we would create</description>
        <name>MPSCRelatedCaseOwnerId</name>
        <dataType>String</dataType>
        <expression>IF(ISPICKVAL({!$Record.Reassign_Category_1__c},&quot;Billing&quot;), &quot;00G70000001RPjR&quot;
  , IF (ISPICKVAL({!$Record.Reassign_Category_1__c},&quot;Reload&quot;), &quot;00G70000003wQlF&quot;
    , IF (ISPICKVAL({!$Record.Reassign_Category_1__c},&quot;Cancel&quot;), &quot;00G70000001RPjQ&quot;
	  , IF (ISPICKVAL({!$Record.Reassign_Category_1__c},&quot;RMA&quot;), &quot;00G70000001RPjI&quot;
        , IF (ISPICKVAL({!$Record.Reassign_Category_1__c},&quot;HRO Lost Client Notification&quot;), &quot;00G70000001ROZ9&quot;
		  , IF (ISPICKVAL({!$Record.Reassign_Category_1__c},&quot;TSS Service Request&quot;), &quot;00G70000001ROZO&quot; 
		    , IF (ISPICKVAL({!$Record.Reassign_Category_1__c},&quot;TSS Webex&quot;), &quot;00G70000001ROZO&quot;, &quot;&quot;)))))))</expression>
    </formulas>
    <formulas>
        <description>Get the Record Type Id based on the case information</description>
        <name>MPSCRelatedCaseRecordTypeId</name>
        <dataType>String</dataType>
        <expression>IF(ISPICKVAL({!$Record.Product__c},&quot;TLO&quot;), &quot;012700000001U32&quot;
  , IF (ISPICKVAL({!$Record.Product__c},&quot;STM&quot;), &quot;01270000000UOmh&quot;
     , IF (ISPICKVAL({!$Record.Reassign_Category_1__c},&quot;HRO Lost Client Notification&quot;), &quot;012700000001U30&quot;
       , IF (ISPICKVAL({!$Record.Reassign_Category_1__c},&quot;TSS Service Request&quot;), &quot;012700000001U30&quot; 
         , IF (ISPICKVAL({!$Record.Reassign_Category_1__c},&quot;TSS Webex&quot;), &quot;012700000001U30&quot;, &quot;&quot;)))))</expression>
    </formulas>
    <formulas>
        <name>ReminderTime</name>
        <dataType>DateTime</dataType>
        <expression>{!$Record.Parent.Client_Assigned_Date__c} - 15</expression>
    </formulas>
    <formulas>
        <name>S2SChatterPost</name>
        <dataType>String</dataType>
        <expression>IF( CONTAINS({!$Record.OwnerId} , &apos;00G0g0000049BTJ&apos;) , {!UC_S2SStatusChangeChatterPost} , {!NonUC_S2SStatusChangeChatterPost})</expression>
    </formulas>
    <formulas>
        <name>S2SChatterPostAltContact</name>
        <dataType>String</dataType>
        <expression>IF( CONTAINS({!$Record.OwnerId} , &apos;00G0g0000049BTJ&apos;) , {!UC_S2SStatusChangeAltCtctChatter}, {!NonUC_S2SStatusChangeAltCtctChatter})</expression>
    </formulas>
    <formulas>
        <name>SixMonths</name>
        <dataType>Date</dataType>
        <expression>{!$Flow.CurrentDate} + 180</expression>
    </formulas>
    <interviewLabel>Case After Flows {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case After Flows</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_a_Reference_Incoming_Funds</name>
        <label>Create a Reference Incoming Funds</label>
        <locationX>578</locationX>
        <locationY>839</locationY>
        <inputReference>ReferenceIncomingFunds</inputReference>
    </recordCreates>
    <recordCreates>
        <name>Create_MPSC_Ref_Core_Pay</name>
        <label>Create MPSC Ref Core Pay</label>
        <locationX>1106</locationX>
        <locationY>839</locationY>
        <inputReference>newRefCorePay</inputReference>
    </recordCreates>
    <recordCreates>
        <name>Create_PEO_Support_Case</name>
        <label>Create Support Case</label>
        <locationX>2162</locationX>
        <locationY>839</locationY>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ContactId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Description</field>
            <value>
                <elementReference>$Record.Description</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Discrepancy_Sub_Type__c</field>
            <value>
                <stringValue> Research Needed</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Discrepancy_Type__c</field>
            <value>
                <stringValue> Client Level SUI</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Origin</field>
            <value>
                <elementReference>$Record.Origin</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Originator_Email_Address__c</field>
            <value>
                <elementReference>$Record.Originator_Email_Address__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <stringValue>00G0g000003Xn3P</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue> Medium</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Product__c</field>
            <value>
                <stringValue> Taxes</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <stringValue>01270000000UNKD</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Referral_Contact__c</field>
            <value>
                <elementReference>$Record.Referral_Contact__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue> New</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <elementReference>$Record.Subject</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Reference_401k_S125_record</name>
        <label>Create Reference 401k/S125 record</label>
        <locationX>4714</locationX>
        <locationY>839</locationY>
        <inputAssignments>
            <field>Case_Lookup__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Contact_Email__c</field>
            <value>
                <elementReference>$Record.ContactEmail</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Contact_Name__c</field>
            <value>
                <elementReference>$Record.Contact_Name__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Contact_Phone_Number__c</field>
            <value>
                <elementReference>$Record.ContactPhone</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Payroll_Issue_Reason__c</field>
            <value>
                <stringValue>PEP Payroll NSF</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <stringValue>0124u0000001ltZAAQ</stringValue>
            </value>
        </inputAssignments>
        <object>Reference_401k_S125__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Safety_Task</name>
        <label>Create Safety Task</label>
        <locationX>1898</locationX>
        <locationY>839</locationY>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>SixMonths</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.CreatedById</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Product__c</field>
            <value>
                <stringValue>PEO</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <stringValue>01270000000N1j0AAC</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>SAFETY - Schedule RA Update</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Save_Reference_Operations_Support</name>
        <label>Save Reference Operations Support</label>
        <locationX>1370</locationX>
        <locationY>731</locationY>
        <inputAssignments>
            <field>Case_Lookup__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Current_Step__c</field>
            <value>
                <stringValue>New Request</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <stringValue>0124u000000YVaQAAW</stringValue>
            </value>
        </inputAssignments>
        <object>Reference_Terms_Transfers__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>STM_PFT_Billing_Audit_Email_sent</name>
        <label>Task STM-PFT Billing Audit Email sent</label>
        <locationX>50</locationX>
        <locationY>1247</locationY>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Description</field>
            <value>
                <stringValue>STM/PFT Billing Audit Email has been sent to Contact</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>STM-PFT Billing Audit Email sent</stringValue>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordUpdates>
        <name>Reject_Ref_Core_Payroll_Recs</name>
        <label>Reject Ref Core Payroll Recs</label>
        <locationX>842</locationX>
        <locationY>731</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Case_Lookup__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue> Closed - Rejected</stringValue>
            </value>
        </inputAssignments>
        <object>Reference_Core_Payroll__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Service_Location</name>
        <label>Update Service Location</label>
        <locationX>1634</locationX>
        <locationY>731</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Multi_Product_Service_Location__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Service_Location__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Multi_Product_Service_Location__c</field>
            <value>
                <elementReference>$Record.Service_Location__c</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <start>
        <locationX>2586</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Does_it_have_case_comments</targetReference>
        </connector>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>ChatterLogisticsCaseSolved</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!$Record.CreatedById}
Your Logistics and Delivery project has been completed for client {!$Record.Account.Name}.</text>
    </textTemplates>
    <textTemplates>
        <name>ChatterNewLogisticsOwner</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.OwnerId}], You have been assigned a new {!$Record.Priority} priority Logistics and Delivery project.</text>
    </textTemplates>
    <textTemplates>
        <name>MPSCAnalystChatterMsg</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.Contact.User_Lookup__c}], this case is {!$Record.Status}.</text>
    </textTemplates>
    <textTemplates>
        <name>NewCaseCommentsChatter</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.OwnerId}] Please review your open case, as a new note has been added</text>
    </textTemplates>
    <textTemplates>
        <name>NonUC_S2SStatusChangeAltCtctChatter</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.CreatedById}]  @[{!$Record.Alternate_Contact__r.User_Lookup__c}] The Status for client {!$Record.Account.Name} has been updated to {!$Record.Status}
Notes:
{!$Record.Status_Description__c}</text>
    </textTemplates>
    <textTemplates>
        <name>NonUC_S2SStatusChangeChatterPost</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.CreatedById}] The Status for client {!$Record.Account.Name} has been updated to {!$Record.Status}
Notes:
{!$Record.Status_Description__c}</text>
    </textTemplates>
    <textTemplates>
        <description>Notify Case creator that related 401k/S125 Case is closed</description>
        <name>NotifyCasecreatorthatrelated401kS125Caeiscloseds</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.Parent.CreatedById}] Case #{!$Record.CaseNumber}, which is related to Parent Case #{!$Record.Parent.CaseNumber}, has been closed.
To view the processing information, click this link: {!$Record.Custom_Case_Link__c}</text>
    </textTemplates>
    <textTemplates>
        <name>S2SCaseArrivedInQueue</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>A Salesforce case has arrived in your queue with Priority {!$Record.Priority}</text>
    </textTemplates>
    <textTemplates>
        <name>S2SStatusChangeRefAcctAltContact</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.CreatedById}] @[{!$Record.Alternate_Contact__r.User_Lookup__c}] The Status for client {!$Record.Referral_Account__r.Name} has been updated to {!$Record.Status}
Notes:
{!$Record.Status_Description__c}</text>
    </textTemplates>
    <textTemplates>
        <name>S2SStatusChangeRefAcctNoAltCtct</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.CreatedById}] The Status for client {!$Record.Referral_Account__r.Name} has been updated to {!$Record.Status}
Notes:
{!$Record.Status_Description__c}</text>
    </textTemplates>
    <textTemplates>
        <name>UC_S2SStatusChangeAltCtctChatter</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.CreatedById}]  @[{!$Record.Alternate_Contact__r.User_Lookup__c}] The Status for client {!$Record.Account.Name} has been updated to {!$Record.Status}
Notes:
{!$Record.Status_Description__c}
Please contact {!$Record.Assigned_UC_Agent__c} directly over email with any questions or comments on this case.</text>
    </textTemplates>
    <textTemplates>
        <name>UC_S2SStatusChangeChatterPost</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>@[{!$Record.CreatedById}] The Status for client {!$Record.Account.Name} has been updated to {!$Record.Status}
Notes:
{!$Record.Status_Description__c}
Please contact {!$Record.Assigned_UC_Agent__c} directly over email with any questions or comments on this case.</text>
    </textTemplates>
    <variables>
        <name>newCase</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>newEvnt</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Event</objectType>
    </variables>
    <variables>
        <name>newRefCorePay</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Reference_Core_Payroll__c</objectType>
    </variables>
    <variables>
        <name>ReferenceIncomingFunds</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Reference_Incoming_Funds__c</objectType>
    </variables>
</Flow>
